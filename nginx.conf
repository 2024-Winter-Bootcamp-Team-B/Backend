user nginx;
worker_processes auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

# Nginx 네트워크 이벤트 처리 방식(예: 연결, 쓰레드 등)을 정의
# 최대 연결 수(worker_connections)와 같은 이벤트 설정을 여기에 추가할 수 있음
events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
    access_log  /var/log/nginx/test.log  main;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    types_hash_max_size 2048;


    # 업스트림 서버 그룹 정의
    upstream backend {
        server fastapi:8000;
    }

    upstream frontend {
        server frontend:5173;
    }

    # grafana 업스트림 그룹 정의
    upstream grafana {
        server grafana:3000;
    }

    server {
        listen 80;
        charset utf-8;
        server_name localhost; # 나중에 배포할 때 도메인 이름으로 변경!

        # SSL 인증서 발급을 자동화하는 Certbot을 사용하기 위한 설정
        # location /.well-known/acme-challenge/ {
        #     allow all;
        #     root /var/www/certbot;
        # }

        # HTTP 요청을 HTTPS로 리다이렉트
        # location / {
        #     return 301 https://$host$request_uri;
        # }

        # 클라이언트가 /로 시작하는 요청을 보내면, Nginx는 이를 프론트엔드 서버(React/Vue 등)에 전달 -> 이거 나중에 수정 필요!
        # location / {
        #     proxy_pass http://frontend;
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        # }

        # 클라이언트가 /api/v1/로 시작하는 요청을 보내면, Nginx는 이를 http://backend로 전달
        # location /api/v1/ {
        #     proxy_set_header Host $host;
        #     proxy_redirect off;
        #     proxy_connect_timeout 300s;
        #     proxy_read_timeout 600s;
        #     proxy_pass http://backend;
        # }

        # nginx 모니터링을 위한 설정
        location /stub_status { 
            # /stub_status로 메트릭 노출
            stub_status; 
            # 메트릭 설정 키워드
            allow 127.0.0.1; 
            # 로컬 호스트 엑세스 허용
            allow 172.18.0.0/16; 
            # 도커 컨테이너들 엑세스 허용 (nginx-prometheus-exporter가 메트릭을 수집 할수있게 해주는 역활)
        }
    }

    # server {  -> 예전 보성이 팀에서 가져온 건데 우리 입맛대로 바꾸면 될듯
    #     listen 443 ssl;
    #     charset utf-8;

    #     server_name api.forest-of-thoughts.site;

    #     # SSL 인증서 설정
    #     ssl_certificate /etc/letsencrypt/live/api.forest-of-thoughts.site/fullchain.pem;
    #     # SSL 인증서 키 설정
    #     ssl_certificate_key /etc/letsencrypt/live/api.forest-of-thoughts.site/privkey.pem;
    #     # SSL 설정 파일 포함
    #     include /etc/letsencrypt/options-ssl-nginx.conf;
    #     # Diffie-Hellman 키 설정
    #     ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    #     # '/' 경로에 대한 요청을 처리
    #     location / {
    #         proxy_pass http://backend/;
    #         # 프록시 HTTP 버전을 1.1로 설정 (웹소켓 지원)
    #         proxy_http_version 1.1;
    #         # 웹소켓 연결을 위한 업그레이드 헤더 설정
    #         proxy_set_header Upgrade $http_upgrade;
    #         # 웹소켓 연결을 위한 Connection 헤더 설정
    #         proxy_set_header Connection "upgrade";
    #         # 원래 요청의 호스트 헤더를 유지
    #         proxy_set_header Host $host;
    #         # 클라이언트의 실제 IP 주소를 전달
    #         proxy_set_header X-Real-IP $remote_addr;
    #         # 요청이 거쳐간 IP 주소 체인을 전달
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #          # 원래 요청의 프로토콜 (http 또는 https)을 전달
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #     }

    #     # '/monitoring' 경로에 대한 요청을 처리
    #     location /monitoring/ {
    #         proxy_pass http://grafana/;
    #         # 프록시 HTTP 버전을 1.1로 설정 (웹소켓 지원)
    #         proxy_http_version 1.1;
    #         # 웹소켓 연결을 위한 업그레이드 헤더 설정
    #         proxy_set_header Upgrade $http_upgrade;
    #         # 웹소켓 연결을 위한 Connection 헤더 설정
    #         proxy_set_header Connection "upgrade";
    #         # 원래 요청의 호스트 헤더를 유지
    #         proxy_set_header Host $host;
    #         # 클라이언트의 실제 IP 주소를 전달
    #         proxy_set_header X-Real-IP $remote_addr;
    #         # 요청이 거쳐간 IP 주소 체인을 전달
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         # 원래 요청의 프로토콜 (http 또는 https)을 전달
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #     }
    # }
}